worker_processes  2;

error_log logs/error.log info;

events {
    worker_connections 1024;
}

env LOOKUP_URL;
env UPSTREAM_URL;

http {
    server {
        listen 80;

        location = /stub {
            default_type text/html;
            content_by_lua_block {
                ngx.say("admin")
            }
        }

        location / {
            resolver 127.0.0.11 valid=30s;

            access_by_lua '
                ngx.log(ngx.NOTICE, "RemoteIP = " .. ngx.var.remote_addr)
                local checkApi = os.getenv("LOOKUP_URL") .. "?ip=" .. ngx.var.remote_addr

                local function trim(s)
                    return (s:gsub("^%s*(.-)%s*$", "%1"))
                end

                local function starts_with(str, start)
                    return str:sub(1, #start) == start
                end

                local hc = require("httpclient").new()
                local res = hc:get(checkApi)

                if not res.body then
                     ngx.log(ngx.ERR, "Unable to perform permission lookup", err)
                     return ngx.exit(500)
                end

                local group = trim(res.body)
                local match = "/" .. group .. "/"

                if (string.find(ngx.var.request_uri, ".git") ~= nil and not starts_with(ngx.var.request_uri, match)) then
                     ngx.log(ngx.ERR, "You do not have permission to access this resource from this machine.")
                     ngx.say("You do not have permission to access this resource from this machine.")
                     return ngx.exit(500)
                end

            ';

            set_by_lua $upstream_url 'return os.getenv("UPSTREAM_URL")';

            proxy_pass $upstream_url;
        }
    }
}